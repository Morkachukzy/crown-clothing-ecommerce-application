{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { createUserWithEmailAndPassword, getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithEmailAndPassword, signInWithPopup, signInWithRedirect, signOut } from \"firebase/auth\";\nimport { doc, getDoc, getFirestore, setDoc, collection, writeBatch } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAWALHZEIdvHM4Xh6aIe8BGUqDiFUXWcKo\",\n  authDomain: \"crown-ecommerce-app-2c2dc.firebaseapp.com\",\n  projectId: \"crown-ecommerce-app-2c2dc\",\n  storageBucket: \"crown-ecommerce-app-2c2dc.appspot.com\",\n  messagingSenderId: \"644582748836\",\n  appId: \"1:644582748836:web:fc6dd1c24a9ba8ce01ac31\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserProfileDocument = async function (userAuth) {\n  let additionalInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = await doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo\n      });\n    } catch (error) {\n      console.error(`Error creating user: ${error.message}`);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    throw new Error(\"Please provide an email and password\");\n  }\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    // throw new Error('Please provide an email and password');\n    return null;\n  }\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = async callback => await onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","createUserWithEmailAndPassword","getAuth","GoogleAuthProvider","onAuthStateChanged","signInWithEmailAndPassword","signInWithPopup","signInWithRedirect","signOut","doc","getDoc","getFirestore","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserProfileDocument","userAuth","additionalInfo","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","message","createAuthUserWithEmailAndPassword","password","Error","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/Chuka/Documents/Learn/React/CapstoneProject/crown-clothing-ecommerce-application/crown-clothing-ecommerce-app/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  createUserWithEmailAndPassword,\n  getAuth,\n  GoogleAuthProvider,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  signInWithRedirect,\n  signOut,\n} from \"firebase/auth\";\nimport {\n  doc,\n  getDoc,\n  getFirestore,\n  setDoc,\n  collection,\n  writeBatch,\n} from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAWALHZEIdvHM4Xh6aIe8BGUqDiFUXWcKo\",\n  authDomain: \"crown-ecommerce-app-2c2dc.firebaseapp.com\",\n  projectId: \"crown-ecommerce-app-2c2dc\",\n  storageBucket: \"crown-ecommerce-app-2c2dc.appspot.com\",\n  messagingSenderId: \"644582748836\",\n  appId: \"1:644582748836:web:fc6dd1c24a9ba8ce01ac31\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n  signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n  signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserProfileDocument = async (\n  userAuth,\n  additionalInfo = {}\n) => {\n  if (!userAuth) return;\n\n  const userDocRef = await doc(db, \"users\", userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo,\n      });\n    } catch (error) {\n      console.error(`Error creating user: ${error.message}`);\n    }\n  }\n\n  return userDocRef;\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    throw new Error(\"Please provide an email and password\");\n  }\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    // throw new Error('Please provide an email and password');\n    return null;\n  }\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = async (callback) =>\n  await onAuthStateChanged(auth, callback);\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,8BADF,EAEEC,OAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,0BALF,EAMEC,eANF,EAOEC,kBAPF,EAQEC,OARF,QASO,eATP;AAUA,SACEC,GADF,EAEEC,MAFF,EAGEC,YAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,UANF,QAOO,oBAPP;AASA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,2CAFS;EAGrBC,SAAS,EAAE,2BAHU;EAIrBC,aAAa,EAAE,uCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB;AASA,MAAMC,WAAW,GAAGtB,aAAa,CAACe,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIpB,kBAAJ,EAAvB;AACAoB,cAAc,CAACC,mBAAf,CAAmC;EAAEC,MAAM,EAAE;AAAV,CAAnC;AAEA,OAAO,MAAMC,IAAI,GAAGxB,OAAO,EAApB;AACP,OAAO,MAAMyB,qBAAqB,GAAG,MACnCrB,eAAe,CAACoB,IAAD,EAAOH,cAAP,CADV;AAEP,OAAO,MAAMK,wBAAwB,GAAG,MACtCrB,kBAAkB,CAACmB,IAAD,EAAOH,cAAP,CADb;AAGP,OAAO,MAAMM,EAAE,GAAGlB,YAAY,EAAvB;AAEP,OAAO,MAAMmB,yBAAyB,GAAG,gBACvCC,QADuC,EAGpC;EAAA,IADHC,cACG,uEADc,EACd;EACH,IAAI,CAACD,QAAL,EAAe;EAEf,MAAME,UAAU,GAAG,MAAMxB,GAAG,CAACoB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAA5B;EACA,MAAMC,YAAY,GAAG,MAAMzB,MAAM,CAACuB,UAAD,CAAjC;;EAEA,IAAI,CAACE,YAAY,CAACC,MAAb,EAAL,EAA4B;IAC1B,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBP,QAA/B;IACA,MAAMQ,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IACA,IAAI;MACF,MAAM5B,MAAM,CAACqB,UAAD,EAAa;QACvBI,WADuB;QAEvBC,KAFuB;QAGvBC,SAHuB;QAIvB,GAAGP;MAJoB,CAAb,CAAZ;IAMD,CAPD,CAOE,OAAOS,KAAP,EAAc;MACdC,OAAO,CAACD,KAAR,CAAe,wBAAuBA,KAAK,CAACE,OAAQ,EAApD;IACD;EACF;;EAED,OAAOV,UAAP;AACD,CAzBM;AA2BP,OAAO,MAAMW,kCAAkC,GAAG,OAAON,KAAP,EAAcO,QAAd,KAA2B;EAC3E,IAAI,CAACP,KAAD,IAAU,CAACO,QAAf,EAAyB;IACvB,MAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;EACD;;EAED,OAAO,MAAM7C,8BAA8B,CAACyB,IAAD,EAAOY,KAAP,EAAcO,QAAd,CAA3C;AACD,CANM;AAQP,OAAO,MAAME,kCAAkC,GAAG,OAAOT,KAAP,EAAcO,QAAd,KAA2B;EAC3E,IAAI,CAACP,KAAD,IAAU,CAACO,QAAf,EAAyB;IACvB;IACA,OAAO,IAAP;EACD;;EAED,OAAO,MAAMxC,0BAA0B,CAACqB,IAAD,EAAOY,KAAP,EAAcO,QAAd,CAAvC;AACD,CAPM;AASP,OAAO,MAAMG,WAAW,GAAG,YAAY,MAAMxC,OAAO,CAACkB,IAAD,CAA7C;AAEP,OAAO,MAAMuB,0BAA0B,GAAG,MAAOC,QAAP,IACxC,MAAM9C,kBAAkB,CAACsB,IAAD,EAAOwB,QAAP,CADnB"},"metadata":{},"sourceType":"module"}