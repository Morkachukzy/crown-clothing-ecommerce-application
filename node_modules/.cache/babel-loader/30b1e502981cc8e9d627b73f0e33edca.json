{"ast":null,"code":"var _jsxFileName = \"/Users/Chuka/Documents/Learn/React/CapstoneProject/crown-clothing-ecommerce-application/crown-clothing-ecommerce-app/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from \"./button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPES = {\n  base: \"base\",\n  google: \"google-sign-in \",\n  inverted: \"inverted\"\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPES.base;\n  return {\n    [BUTTON_TYPES.base]: BaseButton,\n    [BUTTON_TYPES.google]: GoogleSignInButton,\n    [BUTTON_TYPES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nexport const Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    className: `button-container ${BUTTON_TYPES[buttonType]}`,\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n};\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPES","base","google","inverted","getButton","buttonType","Button","children","otherProps","CustomButton"],"sources":["/Users/Chuka/Documents/Learn/React/CapstoneProject/crown-clothing-ecommerce-application/crown-clothing-ecommerce-app/src/components/button/button.component.jsx"],"sourcesContent":["import {BaseButton, GoogleSignInButton, InvertedButton} from \"./button.styles\";\n\nconst BUTTON_TYPES = {\n    base: \"base\", google: \"google-sign-in \", inverted: \"inverted\",\n}\n\nconst getButton = (buttonType = BUTTON_TYPES.base) => ({\n        [BUTTON_TYPES.base]: BaseButton,\n        [BUTTON_TYPES.google]: GoogleSignInButton,\n        [BUTTON_TYPES.inverted]: InvertedButton,\n    }[buttonType])\n\nexport const Button = ({children, buttonType, ...otherProps}) => {\n    const CustomButton = getButton(buttonType);\n\n    return (<CustomButton className={`button-container ${BUTTON_TYPES[buttonType]}`} {...otherProps}>\n            {children}\n        </CustomButton>);\n}"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,kBAApB,EAAwCC,cAAxC,QAA6D,iBAA7D;;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,MADW;EACHC,MAAM,EAAE,iBADL;EACwBC,QAAQ,EAAE;AADlC,CAArB;;AAIA,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcL,YAAY,CAACC,IAA3B;EAAA,OAAqC;IAC/C,CAACD,YAAY,CAACC,IAAd,GAAqBJ,UAD0B;IAE/C,CAACG,YAAY,CAACE,MAAd,GAAuBJ,kBAFwB;IAG/C,CAACE,YAAY,CAACG,QAAd,GAAyBJ;EAHsB,EAIjDM,UAJiD,CAArC;AAAA,CAAlB;;AAMA,OAAO,MAAMC,MAAM,GAAG,QAA2C;EAAA,IAA1C;IAACC,QAAD;IAAWF,UAAX;IAAuB,GAAGG;EAA1B,CAA0C;EAC7D,MAAMC,YAAY,GAAGL,SAAS,CAACC,UAAD,CAA9B;EAEA,oBAAQ,QAAC,YAAD;IAAc,SAAS,EAAG,oBAAmBL,YAAY,CAACK,UAAD,CAAa,EAAtE;IAAA,GAA6EG,UAA7E;IAAA,UACCD;EADD;IAAA;IAAA;IAAA;EAAA,QAAR;AAGH,CANM;KAAMD,M"},"metadata":{},"sourceType":"module"}