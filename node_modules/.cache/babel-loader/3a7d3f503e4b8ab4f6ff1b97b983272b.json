{"ast":null,"code":"import { createAction } from \"../../utils/reducer/reducer.utils\";\nimport { CART_ACTION_TYPES } from \"./cart.types\";\n\nconst setCartItems = cartItems => createAction(CART_ACTION_TYPES.SET_CART_ITEMS, cartItems);\n\nexport const setIsCartOpen = bool => createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, bool);\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...productToAdd,\n    quantity: 1\n  }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  return cartItems.reduce((totalCartItems, cartItem) => cartItem.id === cartItemToRemove.id ? cartItem.quantity === 1 ? totalCartItems : totalCartItems.concat({ ...cartItem,\n    quantity: cartItem.quantity - 1\n  }) : totalCartItems.concat(cartItem), []);\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) => cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n\nexport const addItemToCart = (cartItems, productToAdd) => {\n  console.log(cartItems);\n  const newCartItems = addCartItem(cartItems, productToAdd);\n  return setCartItems(newCartItems);\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  return setCartItems(newCartItems);\n};\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n  const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  return setCartItems(newCartItems);\n};","map":{"version":3,"names":["createAction","CART_ACTION_TYPES","setCartItems","cartItems","SET_CART_ITEMS","setIsCartOpen","bool","SET_IS_CART_OPEN","addCartItem","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","reduce","totalCartItems","concat","clearCartItem","cartItemToClear","filter","addItemToCart","console","log","newCartItems","removeItemFromCart","clearItemFromCart"],"sources":["/Users/Chuka/Documents/Learn/React/CapstoneProject/crown-clothing-ecommerce-application/src/store/cart/cart.action.js"],"sourcesContent":["import {createAction} from \"../../utils/reducer/reducer.utils\";\nimport {CART_ACTION_TYPES} from \"./cart.types\";\n\nconst setCartItems = (cartItems) => createAction(CART_ACTION_TYPES.SET_CART_ITEMS, cartItems)\n\nexport const setIsCartOpen = (bool) => createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, bool)\n\n\n\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(\n      (cartItem) => cartItem.id === productToAdd.id\n  );\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n        cartItem.id === productToAdd.id\n            ? {\n              ...cartItem,\n              quantity: cartItem.quantity + 1,\n            }\n            : cartItem\n    );\n  }\n\n  return [...cartItems, {...productToAdd, quantity: 1}];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  return cartItems.reduce(\n      (totalCartItems, cartItem) =>\n          cartItem.id === cartItemToRemove.id\n              ? cartItem.quantity === 1\n                  ? totalCartItems\n                  : totalCartItems.concat({\n                    ...cartItem,\n                    quantity: cartItem.quantity - 1,\n                  })\n              : totalCartItems.concat(cartItem),\n      []\n  );\n};\n\nconst clearCartItem = (cartItems, cartItemToClear) =>\n    cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\n\nexport const addItemToCart = (cartItems, productToAdd) => {\n  console.log(cartItems)\n  const newCartItems = addCartItem(cartItems, productToAdd);\n  return setCartItems(newCartItems)\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n  return setCartItems(newCartItems)\n};\n\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n  const newCartItems = clearCartItem(cartItems, cartItemToClear);\n  return setCartItems(newCartItems)\n};\n\n"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,mCAA3B;AACA,SAAQC,iBAAR,QAAgC,cAAhC;;AAEA,MAAMC,YAAY,GAAIC,SAAD,IAAeH,YAAY,CAACC,iBAAiB,CAACG,cAAnB,EAAmCD,SAAnC,CAAhD;;AAEA,OAAO,MAAME,aAAa,GAAIC,IAAD,IAAUN,YAAY,CAACC,iBAAiB,CAACM,gBAAnB,EAAqCD,IAArC,CAA5C;;AAIP,MAAME,WAAW,GAAG,CAACL,SAAD,EAAYM,YAAZ,KAA6B;EAC/C,MAAMC,gBAAgB,GAAGP,SAAS,CAACQ,IAAV,CACpBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EADtB,CAAzB;;EAGA,IAAIH,gBAAJ,EAAsB;IACpB,OAAOP,SAAS,CAACW,GAAV,CAAeF,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAgBJ,YAAY,CAACI,EAA7B,GACM,EACA,GAAGD,QADH;MAEAG,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;IAF9B,CADN,GAKMH,QANH,CAAP;EAQD;;EAED,OAAO,CAAC,GAAGT,SAAJ,EAAe,EAAC,GAAGM,YAAJ;IAAkBM,QAAQ,EAAE;EAA5B,CAAf,CAAP;AACD,CAhBD;;AAkBA,MAAMC,cAAc,GAAG,CAACb,SAAD,EAAYc,gBAAZ,KAAiC;EACtD,OAAOd,SAAS,CAACe,MAAV,CACH,CAACC,cAAD,EAAiBP,QAAjB,KACIA,QAAQ,CAACC,EAAT,KAAgBI,gBAAgB,CAACJ,EAAjC,GACMD,QAAQ,CAACG,QAAT,KAAsB,CAAtB,GACII,cADJ,GAEIA,cAAc,CAACC,MAAf,CAAsB,EACtB,GAAGR,QADmB;IAEtBG,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;EAFR,CAAtB,CAHV,GAOMI,cAAc,CAACC,MAAf,CAAsBR,QAAtB,CATP,EAUH,EAVG,CAAP;AAYD,CAbD;;AAeA,MAAMS,aAAa,GAAG,CAAClB,SAAD,EAAYmB,eAAZ,KAClBnB,SAAS,CAACoB,MAAV,CAAkBX,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBS,eAAe,CAACT,EAA/D,CADJ;;AAIA,OAAO,MAAMW,aAAa,GAAG,CAACrB,SAAD,EAAYM,YAAZ,KAA6B;EACxDgB,OAAO,CAACC,GAAR,CAAYvB,SAAZ;EACA,MAAMwB,YAAY,GAAGnB,WAAW,CAACL,SAAD,EAAYM,YAAZ,CAAhC;EACA,OAAOP,YAAY,CAACyB,YAAD,CAAnB;AACD,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAG,CAACzB,SAAD,EAAYc,gBAAZ,KAAiC;EACjE,MAAMU,YAAY,GAAGX,cAAc,CAACb,SAAD,EAAYc,gBAAZ,CAAnC;EACA,OAAOf,YAAY,CAACyB,YAAD,CAAnB;AACD,CAHM;AAKP,OAAO,MAAME,iBAAiB,GAAG,CAAC1B,SAAD,EAAYmB,eAAZ,KAAgC;EAC/D,MAAMK,YAAY,GAAGN,aAAa,CAAClB,SAAD,EAAYmB,eAAZ,CAAlC;EACA,OAAOpB,YAAY,CAACyB,YAAD,CAAnB;AACD,CAHM"},"metadata":{},"sourceType":"module"}